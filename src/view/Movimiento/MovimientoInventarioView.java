package view.Movimiento;

import dto.Usuario;
import dao.MovimientoInventarioDAO;
import dto.MovimientoInventario;

import java.util.Date;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/**
 *
 * @author Eduardo
 */
public class MovimientoInventarioView extends javax.swing.JPanel {
    private JTable tblMovimientoInventario;
    private JButton btnModificar;
    private JButton btnEliminar;
    private Usuario usuario;
    
    public MovimientoInventarioView(Usuario usuario) {
        this.usuario = usuario;
        setBackground(new Color(175, 18, 128)); // Fondo morado para todo el panel principal
        initComponents();
        inicio();
        loadMovimientosInventario();
    }
    
     private void inicio() {
    setLayout(new BorderLayout());

    JPanel panelTituloBotones = new JPanel(new BorderLayout());
    panelTituloBotones.setBackground(new Color(175, 18, 128)); // Color de fondo morado

    JLabel lblTitulo = new JLabel("MOVIMIENTO INVENTARIO", SwingConstants.CENTER);
    lblTitulo.setFont(new Font("Arial", Font.BOLD, 18));
    lblTitulo.setForeground(new Color(255,238,0)); // Texto blanco

    panelTituloBotones.add(lblTitulo, BorderLayout.CENTER);
    add(panelTituloBotones, BorderLayout.NORTH);

    tblMovimientoInventario = new JTable(new DefaultTableModel(
            new Object[][]{},
            new String[]{"ID Movimiento", "ID Inventario", "Tipo", "Cantidad", "Fecha", "Descripci√≥n"}
    ));
    tblMovimientoInventario.setBackground(new Color(220, 190, 255)); 
    tblMovimientoInventario.setForeground(new Color(75, 0, 130)); 

    tblMovimientoInventario.setSelectionBackground(new Color(180, 130, 255)); 
    tblMovimientoInventario.setSelectionForeground(Color.WHITE); 

    tblMovimientoInventario.getTableHeader().setBackground(new Color(75, 0, 130)); 
    tblMovimientoInventario.getTableHeader().setForeground(new Color(75, 0, 130));
        
    tblMovimientoInventario.setForeground(Color.BLACK); // Texto blanco
    JScrollPane scrollPane = new JScrollPane(tblMovimientoInventario);
    scrollPane.getViewport().setBackground(new Color(175, 18, 128)); // Amarillo suave
    add(scrollPane, BorderLayout.CENTER);
}
     
     private void loadMovimientosInventario() {
        MovimientoInventarioDAO movimientoInventarioDAO = new MovimientoInventarioDAO();
        List<MovimientoInventario> movimientos = movimientoInventarioDAO.obtenerMovimientosInventario();
        DefaultTableModel model = (DefaultTableModel) tblMovimientoInventario.getModel();
        for (MovimientoInventario movimiento : movimientos) {
            int idMovimiento = movimiento.getIdMovimiento();
            int idInventario = movimiento.getIdInventario();
            String tipo = movimiento.getTipo();
            double cantidad = movimiento.getCantidad();
            Date fecha = movimiento.getFecha();
            String descripcion = movimiento.getDescripcion();
    
            Object[] rowData = new Object[model.getColumnCount()]; 

            rowData[0] = idMovimiento; 
            rowData[1] = idInventario;
            rowData[2] = tipo;
            rowData[3] = cantidad;
            rowData[4] = fecha;
            rowData[5] = descripcion;

            model.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
